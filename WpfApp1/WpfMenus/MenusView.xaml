<UserControl
    x:Class="WpfMenus.MenusView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:converters="clr-namespace:WpfMenus.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:menus="clr-namespace:WpfMenus"
    x:Name="ThisMenusView"
    d:DataContext="{d:DesignInstance menus:MenusViewModel}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/WpfMenus;component/ButtonStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>


            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

            <PathGeometry
                x:Key="TreeArrow"
                Figures="M10,0L2,0C1.62,0 1.27,0.21 1.11,0.55C0.94,0.89 0.97,1.3 1.2,1.6L5.2,6.93C5.39,7.18 5.69,7.33 6,7.33C6.31,7.33 6.61,7.18 6.8,6.93L10.8,1.6C11.03,1.3 11.06,0.89 10.89,0.55C10.73,0.21 10.38,0 10,0Z" />

            <!--  展开按钮的样式  -->
            <Style
                x:Key="MenuItemExpandCollapseToggleStyle"
                TargetType="ToggleButton">
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Width" Value="16" />
                <Setter Property="Height" Value="16" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border
                                Width="16"
                                Height="16"
                                Padding="3"
                                Background="Transparent">
                                <Path
                                    x:Name="ExpandPath"
                                    Data="{StaticResource TreeArrow}"
                                    Fill="DarkGray"
                                    RenderTransformOrigin="0.5,0.5"
                                    Stretch="Uniform">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="0" />
                                    </Path.RenderTransform>
                                </Path>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger
                                    Property="IsChecked"
                                    Value="True">
                                    <Setter TargetName="ExpandPath" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="180" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  子菜单的模版  -->
            <DataTemplate x:Key="DefaultChildrenMenuItemsTemplate">
                <ItemsControl
                    ItemTemplateSelector="{x:Static menus:MenuItemTemplateSelector.Default}"
                    ItemsSource="{Binding}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <hc:UniformSpacingPanel
                                x:Name="I345654"
                                Orientation="Vertical"
                                Spacing="8" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </DataTemplate>


            <!--  菜单项的模版  -->
            <DataTemplate
                x:Key="DefaultMenuItemTemplate"
                DataType="{x:Type menus:MenuItemViewModel}">
                <Grid
                    IsEnabled="{Binding Path=(menus:MenuItemViewModel.IsEnabled),
                                        Mode=OneWay}"
                    Visibility="{Binding Path=IsVisible,
                                         Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <!--  主内容  -->
                    <Border
                        x:Name="MainBorder"
                        AllowDrop="{Binding Path=IsAllowDrop}"
                        CornerRadius="4"
                        SnapsToDevicePixels="true">

                        <b:Interaction.Triggers>
                            <b:EventTrigger
                                EventName="Drop"
                                SourceObject="{Binding ElementName=MainBorder}">
                                <b:InvokeCommandAction
                                    Command="{Binding ElementName=ThisMenusView,
                                                      Path=DataContext.MenuItemDropCommand}"
                                    CommandParameter="{Binding}"
                                    PassEventArgsToCommand="True" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>


                        <Grid>
                            <Border
                                x:Name="ContentBorder"
                                Margin="0,0,6,0"
                                CornerRadius="4"
                                SnapsToDevicePixels="true">

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <!--  本菜单的内容  -->
                                    <Button
                                        x:Name="MenuButton"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Center"
                                        HorizontalContentAlignment="Left"
                                        Command="{Binding ElementName=ThisMenusView,
                                                          Path=DataContext.SelectedItemChangedCommand}"
                                        IsEnabled="{Binding Path=IsSelectable}"
                                        Style="{StaticResource WpfMenus.EmptyButtonStyle}">

                                        <Button.CommandParameter>
                                            <MultiBinding Converter="{x:Static converters:MultiParametersConverter.Default}">
                                                <Binding />
                                                <Binding ElementName="MainBorder" />
                                            </MultiBinding>
                                        </Button.CommandParameter>

                                        <menus:MenuItemView
                                            x:Name="PART_Header"
                                            FontFamily="{DynamicResource SourceHanSansCN}"
                                            SnapsToDevicePixels="True" />

                                    </Button>


                                    <!--  展开/收起 切换按钮  -->
                                    <ToggleButton
                                        x:Name="Expander"
                                        Grid.Column="1"
                                        Margin="0,0,8,0"
                                        ClickMode="Press"
                                        Cursor="Hand"
                                        IsChecked="{Binding Path=IsExpanded}"
                                        Style="{StaticResource MenuItemExpandCollapseToggleStyle}"
                                        Visibility="Collapsed" />
                                </Grid>
                            </Border>

                            <!--  关闭按钮  -->
                            <Button
                                x:Name="PART_ButtonClose"
                                Grid.Row="0"
                                Width="16"
                                Height="16"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Command="{Binding ElementName=ThisMenusView,
                                                  Path=DataContext.CloseMenuItemCommand}"
                                CommandParameter="{Binding}"
                                Foreground="DimGray"
                                Style="{StaticResource WpfMenus.EmptyButtonStyle}"
                                Visibility="Hidden" />

                        </Grid>
                    </Border>

                    <!--  子级内容  仅在展开时显示  -->
                    <ContentControl
                        x:Name="ChildrenHost"
                        Grid.Row="1"
                        Content="{Binding Path=Children}"
                        ContentTemplate="{Binding RelativeSource={RelativeSource Self},
                                                  Converter={x:Static converters:MenuContentTemplateFinderConverter.Default},
                                                  TargetNullValue={StaticResource DefaultChildrenMenuItemsTemplate},
                                                  FallbackValue={StaticResource DefaultChildrenMenuItemsTemplate}}"
                        Visibility="Collapsed">

                        <ContentControl.Margin>
                            <Binding
                                Converter="{x:Static converters:IntAttchToThicknessLeftSideConverter.Default}"
                                Path="ChildrenIndentation">
                                <Binding.ConverterParameter>
                                    <Thickness>0,8,0,0</Thickness>
                                </Binding.ConverterParameter>
                            </Binding>
                        </ContentControl.Margin>

                    </ContentControl>
                </Grid>


                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding Path=IsSelectable}" Value="false">
                        <Setter TargetName="MenuButton" Property="Cursor" Value="Arrow" />
                    </DataTrigger>

                    <!--  未展开时不显示子内容  -->
                    <DataTrigger Binding="{Binding Path=IsExpanded}" Value="true">
                        <Setter TargetName="ChildrenHost" Property="Visibility" Value="Visible" />
                    </DataTrigger>

                    <!--  不存在子级项目时,不显示展开按钮  -->
                    <DataTrigger Binding="{Binding Path=IsExpandButtonVisible}" Value="true">
                        <Setter TargetName="Expander" Property="Visibility" Value="Visible" />
                    </DataTrigger>

                    <!--  可选中的项目  -->
                    <DataTrigger Binding="{Binding Path=(menus:MenuItemViewModel.IsSelectable)}" Value="true">
                        <Setter TargetName="ContentBorder" Property="Cursor" Value="Hand" />
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Path=(menus:MenuItemViewModel.IsAccent)}" Value="true">
                        <Setter TargetName="PART_Header" Property="TextBlock.FontFamily" Value="微软雅黑" />
                        <Setter TargetName="PART_Header" Property="TextBlock.Foreground" Value="#130F26" />
                    </DataTrigger>


                    <!--  选中时改变前景色/背景色  -->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=(menus:MenuItemViewModel.IsSelectable)}" Value="true" />

                            <Condition Binding="{Binding Path=(menus:MenuItemViewModel.IsSelected)}" Value="true" />

                        </MultiDataTrigger.Conditions>

                        <MultiDataTrigger.Setters>
                            <Setter TargetName="PART_Header" Property="Foreground" Value="#1678F2" />
                            <Setter TargetName="ContentBorder" Property="Background" Value="#F1F8FF" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>

                    <!--  鼠标悬停时改变颜色  -->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=(menus:MenuItemViewModel.IsSelectable)}" Value="true" />

                            <Condition Binding="{Binding ElementName=MainBorder, Path=IsMouseOver}" Value="true" />

                        </MultiDataTrigger.Conditions>

                        <MultiDataTrigger.Setters>
                            <Setter TargetName="PART_Header" Property="Foreground" Value="#1678F2" />
                            <Setter TargetName="ContentBorder" Property="Background" Value="#DDEDFF" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>


                    <!--  鼠标悬停时显示关闭按钮  -->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=(menus:MenuItemViewModel.CanClose)}" Value="true" />


                            <Condition Binding="{Binding ElementName=MainBorder, Path=IsMouseOver}" Value="true" />
                        </MultiDataTrigger.Conditions>

                        <Setter TargetName="PART_ButtonClose" Property="Visibility" Value="Visible" />
                    </MultiDataTrigger>


                </DataTemplate.Triggers>

            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>

    <!--  整个菜单列表的模版  -->
    <ItemsControl
        ItemTemplateSelector="{x:Static menus:MenuItemTemplateSelector.Default}"
        ItemsSource="{Binding Path=MenuList}">
        <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
                <hc:UniformSpacingPanel
                    Orientation="Vertical"
                    Spacing="8" />
            </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
    </ItemsControl>
</UserControl>